{"ast":null,"code":"var _jsxFileName = \"/home/abhick/Documents/ecom/src/postrequestMQ.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport retry from 'retry';\nconst api = axios.create({\n  baseURL: `http://localhost:8000/post/msg`\n});\nexport default class createContent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.retry = new Retry({\n      timeout: 3000,\n      // specified in ms, how long to wait for a success\n      interval: 1000,\n      // How long to wait between failures before retrying initially\n      max_tries: 4,\n      // How many times to attempt retrying before failing\n      fallback: Retry.Fallbacks.Constant,\n      // The scheme to use for calculating the wait between retries\n      func: function () {\n        createPayload = async () => {\n          let res = await api.post('/', {\n            queueName: 'user',\n            payload: 'Sent from react'\n          });\n          console.log(res);\n        };\n      },\n      // The function to retry\n      onSuccess: function () {\n        console.info('Yay');\n      },\n      onFailure: function () {\n        console.warn('Nay');\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.createPayload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Order Me\"));\n  }\n\n}","map":{"version":3,"sources":["/home/abhick/Documents/ecom/src/postrequestMQ.js"],"names":["React","Component","axios","Button","retry","api","create","baseURL","createContent","Retry","timeout","interval","max_tries","fallback","Fallbacks","Constant","func","createPayload","res","post","queueName","payload","console","log","onSuccess","info","onFailure","warn","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAG;AADa,CAAb,CAAZ;AAIA,eAAe,MAAMC,aAAN,SAA4BP,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACnDG,KADmD,GAC3C,IAAIK,KAAJ,CAAU;AAChBC,MAAAA,OAAO,EAAE,IADO;AACD;AACfC,MAAAA,QAAQ,EAAE,IAFM;AAEA;AAChBC,MAAAA,SAAS,EAAE,CAHK;AAGF;AACdC,MAAAA,QAAQ,EAAEJ,KAAK,CAACK,SAAN,CAAgBC,QAJV;AAIoB;AAEpCC,MAAAA,IAAI,EAAE,YAAY;AAChBC,QAAAA,aAAa,GAAG,YAAY;AAC1B,cAAIC,GAAG,GAAG,MAAMb,GAAG,CAACc,IAAJ,CAAS,GAAT,EAAc;AAC5BC,YAAAA,SAAS,EAAE,MADiB;AAE5BC,YAAAA,OAAO,EAAE;AAFmB,WAAd,CAAhB;AAIAC,UAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACD,SAND;AAOD,OAde;AAcb;AAEHM,MAAAA,SAAS,EAAE,YAAY;AACrBF,QAAAA,OAAO,CAACG,IAAR,CAAa,KAAb;AACD,OAlBe;AAmBhBC,MAAAA,SAAS,EAAE,YAAY;AACrBJ,QAAAA,OAAO,CAACK,IAAR,CAAa,KAAb;AACD;AArBe,KAAV,CAD2C;AAAA;;AAyBnDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,OAAO,EAAE,KAAKX,aAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAWD;;AArCkD","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport retry from 'retry';\n\nconst api = axios.create({\n  baseURL: `http://localhost:8000/post/msg`,\n});\n\nexport default class createContent extends Component {\n  retry = new Retry({\n    timeout: 3000, // specified in ms, how long to wait for a success\n    interval: 1000, // How long to wait between failures before retrying initially\n    max_tries: 4, // How many times to attempt retrying before failing\n    fallback: Retry.Fallbacks.Constant, // The scheme to use for calculating the wait between retries\n\n    func: function () {\n      createPayload = async () => {\n        let res = await api.post('/', {\n          queueName: 'user',\n          payload: 'Sent from react',\n        });\n        console.log(res);\n      };\n    }, // The function to retry\n\n    onSuccess: function () {\n      console.info('Yay');\n    },\n    onFailure: function () {\n      console.warn('Nay');\n    },\n  });\n\n  render() {\n    return (\n      <div>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={this.createPayload}\n        >\n          Order Me\n        </Button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}